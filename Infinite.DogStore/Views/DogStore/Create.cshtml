@using Infinite.DogStore.Models
@model Dogs 

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary()
    <div class="mb-2">
        @Html.LabelFor(p => p.DogName, new { @class = "form-label" })
        @Html.TextBoxFor(p => p.DogName, new { @class = "form-control" })
        @Html.ValidationMessageFor(p => p.DogName)
    </div>
    <div class="mb-2">
        @Html.LabelFor(p => p.Description, new { @class = "form-label" })
        @Html.TextBoxFor(p => p.Description, new { @class = "form-control" })

    </div>
    <div class="mb-2">
        @Html.LabelFor(p => p.DogBreedId, new { @class = "form-label" })
        @Html.DropDownListFor(p => p.DogBreedId, new SelectList(ViewBag.DogBreeds, "Id", "DogBreedName"), "--Select--", new { @class = "form-select" })
        @Html.ValidationMessageFor(p => p.DogBreedId)
    </div>
    <div class="mb-2">
        @Html.LabelFor(p => p.Height, new { @class = "form-label" })
        @Html.TextBoxFor(p => p.Height, new { @class = "form-control" })
        @Html.ValidationMessageFor(p => p.Height)
    </div>
    <div class="mb-2">
        @Html.LabelFor(p => p.Weight, new { @class = "form-label" })
        @Html.TextBoxFor(p => p.Weight, new { @class = "form-control" })
        @Html.ValidationMessageFor(p => p.Weight)
    </div>
    <div class="mb-2">
        @Html.LabelFor(p => p.Age, new { @class = "form-label" })
        @Html.TextBoxFor(p => p.Age, new { @class = "form-control" })
        @Html.ValidationMessageFor(p => p.Age)
    </div>
    <div class="mt-2">
        <input type="submit" id="btnSubmit" class="btn btn-primary" value="Submit" />
    </div>
}
